<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %> - Entry/Exit Management System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: "#1e40af",
              secondary: "#3b82f6",
              accent: "#06b6d4",
              dark: "#1f2937",
              light: "#f8fafc",
            },
          },
        },
      };
    </script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <style>
      .facility-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .facility-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
          0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      .stat-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 1rem;
        padding: 1.5rem;
        transition: all 0.3s ease;
      }

      .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .glass-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .btn {
        transition: all 0.2s ease;
      }

      .btn:hover {
        transform: translateY(-1px);
      }

      .modal {
        backdrop-filter: blur(4px);
      }
    </style>
  </head>
  <body
    class="bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 min-h-screen"
  >
    <div class="flex h-screen">
      <%- include('partials/sidebar') %>

      <main class="flex-1 overflow-y-auto lg:ml-0">
        <%- include('partials/header', { title: 'Facility Management' }) %>

        <!-- Main Content -->
        <div class="p-4 lg:p-6 animate-fade-in">
          <!-- Page Header with Enhanced Design -->
          <div class="mb-8 lg:mb-10">
            <div class="relative">
              <!-- Background decoration -->
              <div
                class="absolute inset-0 bg-gradient-to-r from-green-500/10 to-teal-500/10 rounded-3xl transform -rotate-1"
              ></div>
              <div class="relative glass-card rounded-2xl p-6 lg:p-8">
                <div
                  class="flex flex-col lg:flex-row lg:items-center lg:justify-between"
                >
                  <div class="flex items-center gap-4 mb-4 lg:mb-0">
                    <div class="relative">
                      <div
                        class="p-3 bg-gradient-to-r from-green-500 to-teal-600 rounded-xl text-white shadow-lg"
                      >
                        <i class="fas fa-building text-xl"></i>
                      </div>
                      <div class="pulse-ring"></div>
                    </div>
                    <div>
                      <h1
                        class="text-3xl lg:text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent"
                      >
                        Facility Management
                      </h1>
                      <p class="text-gray-600 mt-1 text-lg">
                        Manage facilities, prices, and availability
                      </p>
                    </div>
                  </div>
                  
                </div>
              </div>
            </div>
          </div>

          <!-- Quick Stats -->
          <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-8">
            <div class="stat-card">
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-sm font-medium text-white mb-1 opacity-90">
                    Total Facilities
                  </p>
                  <p
                    class="text-2xl lg:text-3xl font-bold text-white"
                    id="totalFacilities"
                  >
                    -
                  </p>
                </div>
                <div
                  class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center"
                >
                  <i class="fas fa-building text-white text-xl"></i>
                </div>
              </div>
            </div>

            <div
              class="stat-card"
              style="
                background: linear-gradient(135deg, #10b981 0%, #34d399 100%);
              "
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-sm font-medium text-white mb-1 opacity-90">
                    Active Facilities
                  </p>
                  <p
                    class="text-2xl lg:text-3xl font-bold text-white"
                    id="activeFacilities"
                  >
                    -
                  </p>
                </div>
                <div
                  class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center"
                >
                  <i class="fas fa-check-circle text-white text-xl"></i>
                </div>
              </div>
            </div>

            <div
              class="stat-card"
              style="
                background: linear-gradient(135deg, #ef4444 0%, #f87171 100%);
              "
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-sm font-medium text-white mb-1 opacity-90">
                    Inactive Facilities
                  </p>
                  <p
                    class="text-2xl lg:text-3xl font-bold text-white"
                    id="inactiveFacilities"
                  >
                    -
                  </p>
                </div>
                <div
                  class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center"
                >
                  <i class="fas fa-times-circle text-white text-xl"></i>
                </div>
              </div>
            </div>
            
          </div>

          <!-- Quick Actions -->
          <div
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4 lg:gap-6 mb-8"
          >
            <button
              class="group glass-card hover:shadow-xl border-2 border-transparent hover:border-blue-200 p-6 transition-all duration-300 text-center"
              onclick="openAddFacilityModal()"
            >
              <div
                class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:scale-110 transition-transform"
              >
                <i class="fas fa-plus text-white text-xl"></i>
              </div>
              <h3 class="text-lg font-bold text-gray-900 mb-2">Add Facility</h3>
              <p class="text-sm text-gray-600">Create new facility</p>
            </button>
          </div>

          <% if (typeof error !== 'undefined' && error) { %>
          <div
            class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6 flex items-center gap-3"
          >
            <i class="fas fa-exclamation-triangle text-red-500"></i>
            <span class="text-red-700"><%= error %></span>
          </div>
          <% } %> <% if (typeof success !== 'undefined' && success) { %>
          <div
            class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6 flex items-center gap-3"
          >
            <i class="fas fa-check-circle text-green-500"></i>
            <span class="text-green-700"><%= success %></span>
          </div>
          <% } %>

          <!-- Filters Section -->
          <div
            class="bg-white rounded-2xl shadow-lg p-6 mb-8 border border-gray-100"
          >
            <div class="flex items-center justify-between mb-6">
              <h3
                class="text-lg font-bold text-gray-900 flex items-center gap-3"
              >
                <div
                  class="w-8 h-8 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center"
                >
                  <i class="fas fa-filter text-white text-sm"></i>
                </div>
                Filters & Search
              </h3>
              <button
                onclick="clearFilters()"
                class="text-sm text-gray-500 hover:text-gray-700 flex items-center gap-2 transition-colors"
              >
                <i class="fas fa-times-circle"></i>
                Clear All
              </button>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              <div>
                <label
                  for="statusFilter"
                  class="block text-sm font-semibold text-gray-700 mb-3"
                >
                  Status Filter
                </label>
                <div class="relative">
                  <select
                    id="statusFilter"
                    class="w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-all duration-200 appearance-none"
                    onchange="filterFacilities()"
                  >
                    <option value="">All Facilities</option>
                    <option value="active">✅ Active Only</option>
                    <option value="inactive">⏸️ Inactive Only</option>
                  </select>
                  <i
                    class="fas fa-chevron-down absolute right-4 top-4 text-gray-400 pointer-events-none"
                  ></i>
                </div>
              </div>

              <div>
                <label
                  for="searchFilter"
                  class="block text-sm font-semibold text-gray-700 mb-3"
                >
                  Search Facilities
                </label>
                <div class="relative">
                  <input
                    type="text"
                    id="searchFilter"
                    class="w-full px-4 py-3 pl-12 bg-gray-50 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-all duration-200"
                    placeholder="Search by name or description..."
                    onkeyup="filterFacilities()"
                  />
                  <i></i>
                </div>
              </div>

              <div>
                <label
                  for="priceRangeFilter"
                  class="block text-sm font-semibold text-gray-700 mb-3"
                >
                  Price Range
                </label>
                <div class="relative">
                  <select
                    id="priceRangeFilter"
                    class="w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-all duration-200 appearance-none"
                    onchange="filterFacilities()"
                  >
                    <option value="">All Prices</option>
                    <option value="0-50">Rs 0 - Rs 50</option>
                    <option value="50-100">Rs 50 - Rs 100</option>
                    <option value="100-200">Rs 100 - Rs 200</option>
                    <option value="200+">Rs 200+</option>
                  </select>
                  <i
                    class="fas fa-chevron-down absolute right-4 top-4 text-gray-400 pointer-events-none"
                  ></i>
                </div>
              </div>
            </div>
          </div>

          <!-- Facilities List -->
          <div id="facilitiesContainer">
            <% if (facilities && facilities.length > 0) { %>
            <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
              <% facilities.forEach(function(facility) { %>
              <div
                class="facility-card bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:border-blue-200 hover:shadow-xl transition-all duration-300 relative overflow-hidden"
                data-status="<%= facility.is_active ? 'active' : 'inactive' %>"
              >
                <!-- Status indicator -->
                <div
                  class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r <%= facility.is_active ? 'from-green-400 to-green-600' : 'from-gray-300 to-gray-500' %>"
                ></div>

                <div class="flex items-start justify-between mb-4">
                  <div class="flex-1">
                    <div class="flex items-center gap-3 mb-3">
                      <div
                        class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center shadow-lg"
                      >
                        <i class="fas fa-building text-white text-lg"></i>
                      </div>
                      <div>
                        <h3 class="text-lg font-bold text-gray-900 mb-1">
                          <%= facility.name %>
                        </h3>
                        <span
                          class="px-3 py-1 rounded-full text-xs font-semibold uppercase tracking-wide <%= facility.is_active ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600' %>"
                        >
                          <%= facility.is_active ? 'Active' : 'Inactive' %>
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Price highlight -->
                <div
                  class="bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl p-4 mb-4 border border-green-100"
                >
                  <div class="flex items-center justify-between">
                    <div>
                      <p class="text-sm font-medium text-green-600 mb-1">
                        Price
                      </p>
                      <p class="text-2xl font-bold text-green-700">
                        Rs <%= parseFloat(facility.price || 0).toFixed(2) %>
                      </p>
                    </div>
                  </div>
                </div>

                <% if (facility.description) { %>
                <div class="mb-4">
                  <p class="text-gray-600 text-sm line-clamp-2 leading-relaxed">
                    <%= facility.description %>
                  </p>
                </div>
                <% } %>

                <div
                  class="flex items-center justify-between text-xs text-gray-500 mb-4 pb-4 border-b border-gray-100"
                >
                  <span class="flex items-center gap-1">
                    <i class="fas fa-calendar-alt"></i>
                    Created <%= new
                    Date(facility.created_at).toLocaleDateString() %>
                  </span>
                </div>

                <!-- Action buttons -->
                <div class="flex flex-wrap gap-2">
                  <button
                    type="button"
                    class="edit-facility-btn bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 flex items-center gap-2 shadow-sm hover:shadow-md"
                    data-facility-id="<%= facility.id %>"
                  >
                    <i class="fas fa-edit text-xs"></i>
                    Edit
                  </button>
                  <button
                    type="button"
                    class="toggle-facility-btn <%= facility.is_active ? 'bg-orange-500 hover:bg-orange-600' : 'bg-green-500 hover:bg-green-600' %> text-white px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 flex items-center gap-2 shadow-sm hover:shadow-md"
                    data-facility-id="<%= facility.id %>"
                  >
                    <i
                      class="fas fa-<%= facility.is_active ? 'pause' : 'play' %> text-xs"
                    ></i>
                    <%= facility.is_active ? 'Disable' : 'Enable' %>
                  </button>
                  <button
                    type="button"
                    class="delete-facility-btn bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 flex items-center gap-2 shadow-sm hover:shadow-md"
                    data-facility-id="<%= facility.id %>"
                  >
                    <i class="fas fa-trash text-xs"></i>
                    Delete
                  </button>
                </div>
              </div>
              <% }); %>
            </div>
            <% } else { %>
            <!-- Empty state -->
            <div
              class="bg-white rounded-2xl shadow-lg p-12 text-center border border-gray-100"
            >
              <div
                class="w-24 h-24 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg"
              >
                <i class="fas fa-building text-white text-3xl"></i>
              </div>
              <h3 class="text-2xl font-bold text-gray-900 mb-4">
                No Facilities Found
              </h3>
              <p class="text-gray-600 mb-8 max-w-md mx-auto leading-relaxed">
                Start by adding your first facility to manage pricing and
                availability. Create facilities that users can access and
                manage.
              </p>
              <button
                class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-3 px-8 rounded-xl transition-all duration-200 flex items-center gap-3 mx-auto shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
                onclick="openAddFacilityModal()"
              >
                <i class="fas fa-plus"></i>
                Add Your First Facility
              </button>
            </div>
            <% } %>
          </div>
        </div>
      </main>
    </div>

    <!-- Add/Edit Facility Modal -->
    <div
      id="addFacilityModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 modal"
      style="display: none;"
    >
      <div class="flex items-center justify-center min-h-screen px-4 py-8">
        <div
          class="bg-white rounded-xl shadow-2xl max-w-md w-full p-0 overflow-hidden modal-content"
        >
        <div
          class="bg-gradient-to-r from-blue-50 to-blue-100 px-6 py-4 border-b border-blue-200"
        >
          <div class="flex items-center justify-between">
            <h2
              id="facilityModalTitle"
              class="text-xl font-bold text-gray-900 flex items-center gap-3"
            >
              <div class="p-2 bg-blue-500 rounded-lg text-white">
                <i class="fas fa-building"></i>
              </div>
              Add Facility
            </h2>
            <button
              class="text-gray-400 hover:text-gray-600 transition-colors"
              onclick="closeModal('addFacilityModal')"
            >
              <i class="fas fa-times text-xl"></i>
            </button>
          </div>
        </div>

        <form id="facilityForm" class="p-6">
          <input type="hidden" id="facilityId" name="facilityId" />

          <div class="mb-4">
            <label
              for="facilityName"
              class="block text-sm font-medium text-gray-700 mb-2"
              >Facility Name *</label
            >
            <input
              type="text"
              id="facilityName"
              name="name"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              required
              placeholder="Enter facility name"
            />
          </div>

          <div class="mb-4">
            <label
              for="facilityPrice"
              class="block text-sm font-medium text-gray-700 mb-2"
              >Price (Rs) *</label
            >
            <input
              type="number"
              id="facilityPrice"
              name="price"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              step="0.01"
              min="0"
              required
              placeholder="0.00"
            />
          </div>

          <div class="mb-4">
            <label
              for="facilityDescription"
              class="block text-sm font-medium text-gray-700 mb-2"
              >Description</label
            >
            <textarea
              id="facilityDescription"
              name="description"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              rows="3"
              placeholder="Optional description..."
            ></textarea>
          </div>

          <div class="mb-6">
            <label class="flex items-center gap-3">
              <input
                type="checkbox"
                id="facilityActive"
                name="is_active"
                value="1"
                checked
                class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
              />
              <span class="text-sm font-medium text-gray-700">Active</span>
            </label>
          </div>

          <div class="flex gap-3">
            <button
              type="button"
              class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors"
              onclick="closeModal('addFacilityModal')"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="flex-1 bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center gap-2"
              id="saveFacilityBtn"
            >
              <i class="fas fa-save"></i>
              Save Facility
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Usage Report Modal -->
    <div
      id="usageReportModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 modal"
    >
      <div
        class="bg-white rounded-xl shadow-2xl max-w-4xl w-full mx-4 p-0 overflow-hidden max-h-[90vh] modal-content"
      >
        <div
          class="bg-gradient-to-r from-purple-50 to-purple-100 px-6 py-4 border-b border-purple-200"
        >
          <div class="flex items-center justify-between">
            <h2 class="text-xl font-bold text-gray-900 flex items-center gap-3">
              <div class="p-2 bg-purple-500 rounded-lg text-white">
                <i class="fas fa-chart-bar"></i>
              </div>
              Facility Usage Report
            </h2>
            <button
              class="text-gray-400 hover:text-gray-600 transition-colors"
              onclick="closeModal('usageReportModal')"
            >
              <i class="fas fa-times text-xl"></i>
            </button>
          </div>
        </div>

        <div class="p-6">
          <div class="bg-gray-50 rounded-lg p-4 mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 items-end">
              <div>
                <label
                  for="reportStartDate"
                  class="block text-sm font-medium text-gray-700 mb-2"
                  >Start Date</label
                >
                <input
                  type="date"
                  id="reportStartDate"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors"
                />
              </div>
              <div>
                <label
                  for="reportEndDate"
                  class="block text-sm font-medium text-gray-700 mb-2"
                  >End Date</label
                >
                <input
                  type="date"
                  id="reportEndDate"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors"
                />
              </div>
              <div>
                <button
                  class="w-full bg-purple-500 hover:bg-purple-600 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center gap-2"
                  onclick="generateUsageReport()"
                >
                  <i class="fas fa-chart-bar"></i>
                  Generate Report
                </button>
              </div>
            </div>
          </div>
          <div id="usageReportContent" class="overflow-y-auto max-h-96">
            <!-- Report will be loaded here -->
          </div>
        </div>
      </div>
    </div>

    <%- include('partials/enhanced-modal') %> <%- include('partials/toast') %>

    <script src="/js/facility-management.js"></script>
    <script>
      // Initialize page with enhanced functionality
      document.addEventListener("DOMContentLoaded", function () {
        initializeFacilityPage();
      });

      function initializeFacilityPage() {
        loadFacilityStats();

        updateStats();
        updateLastUpdateTime();
        setupModalFunctions();
      }

      // Load facility statistics
      async function loadFacilityStats() {
        try {
          const response = await fetch("/api/facilities/stats");
          const data = await response.json();

          if (data.success) {
            animateCounter("totalFacilities", data.totalFacilities || 0);
            animateCounter("activeFacilities", data.activeFacilities || 0);
            animateCounter("inactiveFacilities", data.inactiveFacilities || 0);
            document.getElementById("avgPrice").textContent =
              "RS " + (data.avgPrice || 0);
            document.getElementById("todayRevenue").textContent =
              "RS " + (data.todayRevenue || 0);
          }
        } catch (error) {
          console.error("Error loading facility stats:", error);
        }
      }

      // Enhanced counter animation
      function animateCounter(elementId, finalValue) {
        const element = document.getElementById(elementId);
        if (!element) return;

        const currentValue =
          parseInt(element.textContent.replace(/[^\d]/g, "")) || 0;
        const increment = Math.ceil((finalValue - currentValue) / 20);

        const timer = setInterval(() => {
          const current =
            parseInt(element.textContent.replace(/[^\d]/g, "")) || 0;
          if (current < finalValue) {
            const newValue = Math.min(current + increment, finalValue);
            element.textContent = newValue;
          } else {
            clearInterval(timer);
          }
        }, 50);
      }

      function setupModalFunctions() {
        // Initialize modal show/hide functions
        window.showModal = function (modalId) {
          const modal = document.getElementById(modalId);
          if (modal) {
            modal.style.display = 'flex';
            modal.classList.remove("hidden");
            modal.classList.add("flex", "items-center", "justify-center");
          }
        };

        window.closeModal = function (modalId) {
          const modal = document.getElementById(modalId);
          if (modal) {
            modal.style.display = 'none';
            modal.classList.add("hidden");
            modal.classList.remove("flex", "items-center", "justify-center");
          }
        };
      }

      function updateStats() {
        const facilities = document.querySelectorAll(".facility-card");
        const activeFacilities = document.querySelectorAll(
          '.facility-card[data-status="active"]'
        );
        const inactiveFacilities = document.querySelectorAll(
          '.facility-card[data-status="inactive"]'
        );

        document.getElementById("totalFacilities").textContent =
          facilities.length;
        document.getElementById("activeFacilities").textContent =
          activeFacilities.length;
        document.getElementById("inactiveFacilities").textContent =
          inactiveFacilities.length;

        // Calculate average price
        let totalPrice = 0;
        let priceCount = 0;
        facilities.forEach((card) => {
          const priceText =
            card.querySelector(".text-green-600") ||
            card.querySelector(".text-2xl");
          if (priceText) {
            const price = parseFloat(priceText.textContent.replace("RS ", ""));
            if (!isNaN(price)) {
              totalPrice += price;
              priceCount++;
            }
          }
        });

        const avgPrice = priceCount > 0 ? totalPrice / priceCount : 0;
        document.getElementById("avgPrice").textContent =
          "RS " + avgPrice.toFixed(2);
      }

      function updateLastUpdateTime() {
        const lastUpdateElement = document.getElementById("lastUpdate");
        if (lastUpdateElement) {
          lastUpdateElement.textContent =
            "Updated " + new Date().toLocaleTimeString();
        }
      }

      // Enhanced notification system
      function showNotification(message, type = "info") {
        const notification = document.createElement("div");
        const bgColor = {
          success: "bg-green-500",
          error: "bg-red-500",
          warning: "bg-yellow-500",
          info: "bg-blue-500",
        }[type];

        notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-slide-up`;
        notification.innerHTML = `
          <div class="flex items-center">
            <i class="fas fa-${
              type === "success"
                ? "check-circle"
                : type === "error"
                ? "exclamation-circle"
                : type === "warning"
                ? "exclamation-triangle"
                : "info-circle"
            } mr-2"></i>
            ${message}
          </div>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
          notification.style.opacity = "0";
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      // Enhanced modal functions
      function openAddFacilityModal() {
        showModal("addFacilityModal");
      }

      function generateReport() {
        showNotification("Generating facility analytics...", "info");

        setTimeout(() => {
          // Simulate report generation
          showModal("reportModal");
          showNotification("Analytics report generated!", "success");
        }, 1500);
      }

      function exportFacilities() {
        showNotification("Preparing export...", "info");

        setTimeout(() => {
          // Simulate export process
          const link = document.createElement("a");
          link.href = "/api/facilities/export?format=csv";
          link.download = `facilities_export_${
            new Date().toISOString().split("T")[0]
          }.csv`;
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);

          showNotification("Export completed successfully!", "success");
        }, 1000);
      }

      // Clear all filters
      function clearFilters() {
        document.getElementById("statusFilter").value = "";
        document.getElementById("searchFilter").value = "";
        if (document.getElementById("priceRangeFilter")) {
          document.getElementById("priceRangeFilter").value = "";
        }
        filterFacilities();
        showNotification("All filters cleared", "info");
      }

      // Filter facilities function with enhanced UX
      function filterFacilities() {
        const statusFilter = document
          .getElementById("statusFilter")
          .value.toLowerCase();
        const searchFilter = document
          .getElementById("searchFilter")
          .value.toLowerCase();
        const priceRangeFilter = document.getElementById("priceRangeFilter")
          ? document.getElementById("priceRangeFilter").value
          : "";
        const facilityCards = document.querySelectorAll(".facility-card");

        let visibleCount = 0;

        facilityCards.forEach((card) => {
          const status = card.getAttribute("data-status");
          const name = card.querySelector("h3").textContent.toLowerCase();
          const description = card.querySelector("p")
            ? card.querySelector("p").textContent.toLowerCase()
            : "";
          const priceText = card.querySelector(
            ".text-2xl.font-bold.text-green-700"
          ).textContent;
          const price = parseFloat(priceText.replace(/[^0-9.]/g, "")) || 0;

          let showCard = true;

          // Status filter
          if (statusFilter && status !== statusFilter) {
            showCard = false;
          }

          // Search filter
          if (
            searchFilter &&
            !name.includes(searchFilter) &&
            !description.includes(searchFilter)
          ) {
            showCard = false;
          }

          // Price range filter
          if (priceRangeFilter) {
            switch (priceRangeFilter) {
              case "0-50":
                if (price > 50) showCard = false;
                break;
              case "50-100":
                if (price < 50 || price > 100) showCard = false;
                break;
              case "100-200":
                if (price < 100 || price > 200) showCard = false;
                break;
              case "200+":
                if (price < 200) showCard = false;
                break;
            }
          }

          if (showCard) {
            card.style.display = "";
            card.classList.remove("hidden");
            card.classList.add("animate-fade-in");
            visibleCount++;
          } else {
            card.style.display = "none";
            card.classList.add("hidden");
          }
        });

        // Update filter status
        const filterStatus = document.getElementById("filterStatus");
        if (filterStatus) {
          filterStatus.textContent = `Showing ${visibleCount} of ${facilityCards.length} facilities`;
        }
      }

      // Enhanced facility actions
      async function toggleFacilityStatus(facilityId) {
        showNotification("Updating facility status...", "info");
        try {
          const response = await fetch(
            `/api/toggle-facility-status/${facilityId}`,
            { method: "POST" }
          );
          const data = await response.json();
          if (data.success) {
            showNotification(data.message, "success");
            setTimeout(() => location.reload(), 1000);
          } else {
            showNotification(
              data.message || "Failed to update status",
              "error"
            );
          }
        } catch (error) {
          console.error("Error:", error);
          showNotification("Network error occurred", "error");
        }
      }

      async function editFacility(facilityId) {
        try {
          const response = await fetch(`/api/facility-details/${facilityId}`);
          const data = await response.json();
          if (data.success) {
            document.getElementById("facilityModalTitle").innerHTML =
              '<div class="p-2 bg-blue-500 rounded-lg text-white"><i class="fas fa-building"></i></div>Edit Facility';
            document.getElementById("facilityForm").reset();
            document.getElementById("facilityId").value = data.facility.id;
            document.getElementById("facilityName").value = data.facility.name;
            document.getElementById("facilityPrice").value =
              data.facility.price;
            document.getElementById("facilityDescription").value =
              data.facility.description || "";
            document.getElementById("facilityActive").checked =
              data.facility.is_active;
            document.getElementById("saveFacilityBtn").innerHTML =
              '<i class="fas fa-save"></i> Update Facility';
            showModal("addFacilityModal");
          } else {
            showNotification(
              data.message || "Failed to load facility details",
              "error"
            );
          }
        } catch (error) {
          console.error("Error:", error);
          showNotification("Network error occurred", "error");
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("facilitiesContainer");
        container.addEventListener("click", async function (e) {
          const editBtn = e.target.closest(".edit-facility-btn");
          const toggleBtn = e.target.closest(".toggle-facility-btn");
          const deleteBtn = e.target.closest(".delete-facility-btn");
          if (editBtn) {
            e.preventDefault();
            const id = editBtn.getAttribute("data-facility-id");
            editFacility(id);
            return;
          }
          if (toggleBtn) {
            e.preventDefault();
            const id = toggleBtn.getAttribute("data-facility-id");
            toggleFacilityStatus(id);
            return;
          }
          if (deleteBtn) {
            e.preventDefault();
            e.stopPropagation();
            const id = deleteBtn.getAttribute("data-facility-id");
            deleteFacility(id);
            return;
          }
        });
      });

      // Auto-refresh data every 5 minutes
      setInterval(() => {
        loadFacilityStats();
        updateLastUpdateTime();
      }, 300000);
    </script>

    <style>
      /* Enhanced styles */
      .stat-card {
        transition: all 0.3s ease;
        opacity: 1;
      }

      .stat-card:hover {
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
      }

      .glass-card {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.9);
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .facility-card {
        transition: all 0.3s ease;
      }

      .facility-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.15);
      }

      /* Enhanced modal animations */
      .modal {
        backdrop-filter: blur(8px);
      }

      .modal-content {
        animation: modalSlideIn 0.3s ease-out;
      }

      @keyframes modalSlideIn {
        from {
          opacity: 0;
          transform: translateY(-20px) scale(0.95);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }
    </style>
  </body>
</html>
