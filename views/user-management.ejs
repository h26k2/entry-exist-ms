<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Management - Entry/Exit Management System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: "#1e40af",
              secondary: "#3b82f6",
              accent: "#06b6d4",
              dark: "#1f2937",
              light: "#f8fafc",
            },
          },
        },
      };
    </script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="flex h-screen">
      <%- include('partials/sidebar') %>

      <main class="flex-1 overflow-y-auto lg:ml-0">
        <%- include('partials/header', { title: 'User Management' }) %>

        <!-- User Management Content -->
        <div class="p-4 lg:p-6">
          <!-- Header Section -->
          <div class="mb-6 lg:mb-8">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
              <div>
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                  User Management
                </h1>
                <p class="text-gray-600 mt-1">
                  Manage ZKBioTime users and employee records
                </p>
              </div>
              <button
                onclick="openAddUserModal()"
                class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center gap-2 shadow-sm"
              >
                <i class="fas fa-plus"></i>
                Add User
              </button>
            </div>
          </div>

          <!-- Users Table -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
            <div class="p-6 border-b border-gray-200">
              <h2 class="text-lg font-semibold text-gray-900 flex items-center gap-2">
                <i class="fas fa-users text-blue-600"></i>
                All Users
              </h2>
            </div>

            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      ID
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      First Name
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Last Name
                    </th>
                  </tr>
                </thead>
                <tbody id="usersTableBody" class="bg-white divide-y divide-gray-200">
                  <!-- Users will be loaded here -->
                </tbody>
              </table>
            </div>

            <div id="loadingState" class="p-8 text-center">
              <div class="inline-flex items-center">
                <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mr-3"></div>
                Loading users...
              </div>
            </div>

            <div id="emptyState" class="p-8 text-center text-gray-500 hidden">
              <i class="fas fa-users text-4xl mb-4 text-gray-300"></i>
              <p>No users found</p>
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- Add User Modal -->
    <div
      id="addUserModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50"
    >
      <div class="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4 p-0 overflow-hidden">
        <div class="bg-gradient-to-r from-blue-50 to-blue-100 px-6 py-4 border-b border-blue-200">
          <div class="flex items-center justify-between">
            <h2 class="text-xl font-bold text-gray-900 flex items-center gap-3">
              <div class="p-2 bg-blue-500 rounded-lg text-white">
                <i class="fas fa-user-plus"></i>
              </div>
              Add New User
            </h2>
            <button
              class="text-gray-400 hover:text-gray-600 transition-colors"
              onclick="closeAddUserModal()"
            >
              <i class="fas fa-times text-xl"></i>
            </button>
          </div>
        </div>

        <form id="addUserForm" class="p-6">
          <div class="mb-4">
            <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
              First Name *
            </label>
            <input
              type="text"
              id="firstName"
              name="first_name"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              required
              placeholder="Enter first name"
            />
          </div>

          <div class="mb-6">
            <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">
              Last Name *
            </label>
            <input
              type="text"
              id="lastName"
              name="last_name"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              required
              placeholder="Enter last name"
            />
          </div>

          <div class="flex gap-3">
            <button
              type="button"
              class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors"
              onclick="closeAddUserModal()"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="flex-1 bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center gap-2"
              id="saveUserBtn"
            >
              <i class="fas fa-save"></i>
              Add User
            </button>
          </div>
        </form>
      </div>
    </div>

    <script>
      // Load users on page load
      document.addEventListener("DOMContentLoaded", function () {
        loadUsers();
      });

      // Load users from ZKBioTime API
      async function loadUsers() {
        const loadingState = document.getElementById("loadingState");
        const emptyState = document.getElementById("emptyState");
        const tableBody = document.getElementById("usersTableBody");

        try {
          loadingState.style.display = "block";
          emptyState.style.display = "none";

          const response = await fetch("/api/users");
          const data = await response.json();

          loadingState.style.display = "none";

          if (data.success && data.users.length > 0) {
            tableBody.innerHTML = data.users.map(user => `
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  ${user.id}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  ${user.first_name || '-'}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  ${user.last_name || '-'}
                </td>
              </tr>
            `).join("");
          } else {
            tableBody.innerHTML = "";
            emptyState.style.display = "block";
          }
        } catch (error) {
          console.error("Error loading users:", error);
          loadingState.style.display = "none";
          emptyState.style.display = "block";
          showToast("Failed to load users", "error");
        }
      }

      // Modal functions
      function openAddUserModal() {
        document.getElementById("addUserModal").classList.remove("hidden");
        document.getElementById("addUserModal").classList.add("flex");
        document.getElementById("addUserForm").reset();
      }

      function closeAddUserModal() {
        document.getElementById("addUserModal").classList.add("hidden");
        document.getElementById("addUserModal").classList.remove("flex");
      }

      // Add user form submission
      document.getElementById("addUserForm").addEventListener("submit", async function (e) {
        e.preventDefault();

        const saveBtn = document.getElementById("saveUserBtn");
        const formData = new FormData(this);
        const userData = {
          first_name: formData.get("first_name"),
          last_name: formData.get("last_name")
        };

        // Show loading state
        saveBtn.disabled = true;
        saveBtn.innerHTML = '<div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>Adding...';

        try {
          const response = await fetch("/api/add-user", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
          });

          const data = await response.json();

          if (data.success) {
            showToast(data.message, "success");
            closeAddUserModal();
            loadUsers(); // Reload the users table
          } else {
            showToast(data.message || "Failed to add user", "error");
          }
        } catch (error) {
          console.error("Error adding user:", error);
          showToast("Network error occurred", "error");
        } finally {
          // Reset button state
          saveBtn.disabled = false;
          saveBtn.innerHTML = '<i class="fas fa-save"></i> Add User';
        }
      });

      // Toast notification function
      function showToast(message, type = "info") {
        const toast = document.createElement("div");
        const bgColor = {
          success: "bg-green-500",
          error: "bg-red-500",
          warning: "bg-yellow-500",
          info: "bg-blue-500",
        }[type];

        toast.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full opacity-0 transition-all duration-300`;
        toast.innerHTML = `
          <div class="flex items-center">
            <i class="fas fa-${
              type === "success"
                ? "check-circle"
                : type === "error"
                ? "exclamation-circle"
                : type === "warning"
                ? "exclamation-triangle"
                : "info-circle"
            } mr-2"></i>
            ${message}
          </div>
        `;

        document.body.appendChild(toast);

        // Animate in
        setTimeout(() => {
          toast.classList.remove("translate-x-full", "opacity-0");
        }, 100);

        // Animate out and remove
        setTimeout(() => {
          toast.classList.add("translate-x-full", "opacity-0");
          setTimeout(() => toast.remove(), 300);
        }, 3000);
      }

      // Close modal when clicking outside
      document.getElementById("addUserModal").addEventListener("click", function (e) {
        if (e.target === this) {
          closeAddUserModal();
        }
      });
    </script>

    <%- include('partials/toast') %>
  </body>
</html>
